#lightbox {

	position: fixed;
	top: 0;
	left: 0;

	width: 100%;
	height: 100%;

	background-color: white;
	z-index: 5;

	// main.js will hide body's overflow
	overflow-y: scroll;

	// main.js will show the lightbox
	visibility: hidden;
	opacity: 0;

	transition: opacity 0.5s ease-in;

	// Toggle when the lightbox is opened
	&.opened {
		visibility: visible;
		opacity: 1;

		display: flex;
		align-items: center;
		flex-direction: column;
		justify-content: space-between;
	}

	.btn-close {

		position: fixed;
		top: 10px;
		left: 10px;

		line-height: 1;

		z-index: 1;

	}

	#viewer {
		align-self: stretch;
		height: 100%;
	}

	#content {

		@include font-copy();

		display: flex;
		flex-direction: column;
		justify-content: flex-end;

		// Also used to align absolute elements..?
		$padding: 0.75em;

		padding: $padding;

		// Override this for desktop
		position: absolute;
		bottom: 0;
		left: 0;

		background: linear-gradient(to top, white 2.25em, rgba(255, 255, 255, 0.7) );
		width: 100%;

		// Bottom part of tombstone
		// Technically targets all p
		// Overriden by more specific directives
		p {
			font-size: 0.85em;
			margin: 0;

			// For "reveal" on show more
			transition: max-height 0.3s ease-out, margin 0.3s ease-out;
			overflow: hidden;
			max-height: 0;
		}


		// Top part of tombstone
		> p:first-of-type {
			font-size: 0.85em;
			// margin: 0.75em 0;
		}

		// Title of the artwork
		h1 {
			@include font-heading();
			font-size: 1em;
			line-height: 1.25;

			// Mid-line separation...
			margin-bottom: 0.75em;
		}

		// Curatorial description
		blockquote p {

			font-size: 0.75em;

			// Show only the first 2 lines
			// Based on line-height: 1.5em
			display: block;
			max-height: 3em;
			margin: 0;

			// Alas, this doesn't work:
			// word-wrap: break-word;
			// text-overflow: ellipsis;

		}

		// See in our Collection
		a.collection {
			text-decoration: underline;
			color: #03568B;
			font-size: 1.2em;
		}


		// Hide me on non-mobile!
		// Match settings to `blockquote p`
		.btn-expand {

			// Tapping anywhere on the bottom thingy will expand!
			position: absolute;
			bottom: 0;
			right: 0;

			width: 100%;
			height: 100%;

			font-size: 0.75em;

			text-decoration: underline;
			color: #03568B;

			// Position "Read More" to bottom-right
			span, &:after {
				position: absolute;
				bottom: 1.075em;
			}

			// Position "Read More" above the fade-out
			span {
				right: 2em;
				z-index: 1;
				white-space: nowrap;
			}

			// Used to fade out underlying text
			&:after {
				content: "";
				right: 0em;

				height: 1.5em;
				width: 75%;

				background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1) 50%);
				pointer-events: none;
			}

			&.btn-show {
				visibility: visible;
			}

			&.btn-hide {
				visibility: hidden;
			}

		}

	}

	// Show the hidden elements...
	&.expanded {

		#content {

			height: 100%;

			p {
				// Determines how long it takes for the lightbox to expand!
				transition: max-height 0.25s cubic-bezier(0, 0.18, 1, -0.2), margin 0.25s cubic-bezier(0, 0.18, 1, 0.04);
				max-height: 20em;
				// margin: 1.2em 0;
				margin-bottom: 0.75em;
			}

			blockquote {
				margin: 0;
			}

			blockquote p {
				// margin: 1em 0;
			}

			h1 {
				margin-top: 0.75em;
			}

			a.collection {
				position: relative;
				z-index: 10;
			}

			.btn-expand {

				width: auto;
				height: auto;

				span, &:after {
					// visibility: hidden;
				}

				&.btn-hide {
					visibility: visible;
				}

				&.btn-show {
					visibility: hidden;
				}

			}

			.btn-expand-invisible {
				flex-grow: 1;
			}

		}

		.btn-close {
			visibility: hidden;
		}

	}

	@media #{$mq-smallish} {

		&.opened {
			flex-direction: row;
		}

		#viewer {
			height: 100%;
			width: 66%;
		}

		#content {
			position: relative;
			width: 33%;
			margin: 0;
			padding: 0 1em;
		}

	}

}
